{
  "openapi": "3.0.0",
  "info": {
    "title": "Hotel Booking API",
    "description": "API endpoints for authentication, user management, payments, and feedback in the hotel booking system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_register_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "400": {
            "description": "Please provide all required fields."
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_login_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful, token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Please provide all required fields."
          },
          "401": {
            "description": "Invalid credential"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify authentication token",
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "No token provided"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_user_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user account",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/payments/status": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get all payment statuses",
        "responses": {
          "200": {
            "description": "List of all payments with their statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payments": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Make a payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_payments_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payments/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get specific payment details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payments/{id}/status": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get the status of a specific payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payments/traveler/{traveler_id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get all payments for a specific traveler",
        "parameters": [
          {
            "name": "traveler_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments for a specific traveler",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "404": {
            "description": "Traveler not found or no payments found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payments/{id}/retry": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Retry a failed payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Retry initiated for the payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201_1"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          },
          "409": {
            "description": "Payment not in a failed state"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/feedback": {
      "post": {
        "tags": [
          "Feedback"
        ],
        "summary": "Add feedback for a hotel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Feedback added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            }
          },
          "400": {
            "description": "Invalid feedback data or hotel not found"
          },
          "403": {
            "description": "Only travelers can add feedback"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/feedback/{hotel_id}": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "summary": "Get all feedback for a specific hotel",
        "parameters": [
          {
            "name": "hotel_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns feedback list for the hotel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Feedback"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Hotel not found"
          }
        }
      }
    },
    "/api/feedback/{id}": {
      "delete": {
        "tags": [
          "Feedback"
        ],
        "summary": "Delete feedback by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFeedbackResponse"
                }
              }
            }
          },
          "403": {
            "description": "Only hotel managers can delete feedback"
          },
          "404": {
            "description": "Feedback not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/hotels": {
      "get": {
        "tags": [
          "Hotels"
        ],
        "summary": "Returns a list of all hotels",
        "responses": {
          "200": {
            "description": "A list of hotels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hotel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid JWT token"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to access this resource"
          },
          "500": {
            "description": "Service is down. Out dev team is on it"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Hotels"
        ],
        "summary": "Adds a new hotel",
        "requestBody": {
          "description": "Hotel details to insert",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Hotel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid payload or missing required fields"
          },
          "401": {
            "description": "Unauthorized - Missing or invalid JWT token"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to access this resource"
          },
          "409": {
            "description": "Conflict - Hotel with the same name already exists"
          },
          "500": {
            "description": "Service is down. We will be up soon"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/hotels/{hotelId}": {
      "get": {
        "tags": [
          "Hotels"
        ],
        "summary": "Returns a hotel by ID",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "description": "The UUID of the hotel to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid `hotelId` format"
          },
          "401": {
            "description": "Unauthorized - Missing or invalid JWT token"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to access this resource"
          },
          "404": {
            "description": "Not Found - No hotel found with the given `hotelId`"
          },
          "500": {
            "description": "Service is down. We are working on it"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Hotels"
        ],
        "summary": "Deletes a hotel by ID",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "description": "The UUID of the hotel to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Hotel deleted successfully"
          },
          "400": {
            "description": "Bad Request - Invalid `hotelId` format"
          },
          "401": {
            "description": "Unauthorized - Missing or invalid JWT token"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to access this resource"
          },
          "404": {
            "description": "Not Found - No hotel found with the given `hotelId`"
          },
          "500": {
            "description": "Service is down. We are working on it"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Hotel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "b295872e-3bef-4f7c-b595-82a6ca2b2b1c"
          },
          "name": {
            "type": "string",
            "example": "Shettys Kitchen Branch 15"
          },
          "location": {
            "type": "string",
            "example": "123 Ocean View Blvd, Beach City"
          },
          "amenities": {
            "$ref": "#/components/schemas/Hotel_amenities"
          },
          "description": {
            "type": "string",
            "example": "A cozy beachside hotel with stunning ocean views and top-notch amenities."
          },
          "rating": {
            "type": "number",
            "format": "float",
            "example": 4.5
          },
          "managerId": {
            "type": "string",
            "format": "uuid",
            "example": "3a15df65-6986-4ae9-84ee-81fca5ecb842"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": [
              "TRAVELER",
              "HOTEL_MANAGER"
            ]
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string"
          },
          "booking_id": {
            "type": "integer"
          },
          "traveler_id": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "CREDIT",
              "UPI"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaymentStatus": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string"
          },
          "traveler_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS"
            ]
          }
        }
      },
      "Feedback": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hotel_id": {
            "type": "integer"
          },
          "traveler_id": {
            "type": "string",
            "format": "uuid"
          },
          "comments": {
            "type": "string"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          }
        }
      },
      "AddFeedbackRequest": {
        "required": [
          "hotel_id",
          "rating",
          "traveler_id"
        ],
        "type": "object",
        "properties": {
          "hotel_id": {
            "type": "integer"
          },
          "traveler_id": {
            "type": "string",
            "format": "uuid"
          },
          "comments": {
            "type": "string"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          }
        }
      },
      "DeleteFeedbackResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "auth_register_body": {
        "required": [
          "email",
          "first_name",
          "last_name",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "TRAVELER",
              "HOTEL_MANAGER"
            ]
          }
        }
      },
      "inline_response_201": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "auth_login_body": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "users_user_id_body": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User deleted successfully"
          }
        }
      },
      "inline_response_403": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized access"
          }
        }
      },
      "inline_response_404": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "User not found"
          }
        }
      },
      "inline_response_500": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Server error"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "allPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentStatus"
            }
          }
        }
      },
      "api_payments_body": {
        "required": [
          "amount",
          "booking_id",
          "payment_method",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "booking_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "CREDIT",
              "UPI"
            ]
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS"
            ]
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "travelerPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "inline_response_201_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "payment_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS"
            ]
          }
        }
      },
      "Hotel_amenities": {
        "type": "object",
        "properties": {
          "parking": {
            "type": "boolean",
            "example": true
          },
          "wifi": {
            "type": "boolean",
            "example": true
          },
          "roomService": {
            "type": "boolean",
            "example": true
          },
          "spa": {
            "type": "boolean",
            "example": true
          },
          "pool": {
            "type": "boolean",
            "example": true
          },
          "petFriendly": {
            "type": "boolean",
            "example": false
          },
          "gym": {
            "type": "boolean",
            "example": false
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}